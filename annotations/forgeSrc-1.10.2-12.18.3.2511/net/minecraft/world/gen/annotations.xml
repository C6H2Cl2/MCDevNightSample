<root>
    <item name='net.minecraft.world.gen.MapGenCaves boolean isOceanBlock(net.minecraft.world.chunk.ChunkPrimer, int, int, int, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderSettings.Serializer java.lang.Object deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderSettings.Serializer java.lang.Object deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderSettings.Serializer com.google.gson.JsonElement serialize(java.lang.Object, java.lang.reflect.Type, com.google.gson.JsonSerializationContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderServer net.minecraft.world.chunk.Chunk provideChunk(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderOverworld java.util.List&lt;net.minecraft.world.biome.Biome.SpawnListEntry&gt; getPossibleCreatures(net.minecraft.entity.EnumCreatureType, net.minecraft.util.math.BlockPos) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderSettings.Serializer com.google.gson.JsonElement serialize(java.lang.Object, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderFlat ChunkProviderFlat(net.minecraft.world.World, long, boolean, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.MapGenRavine void digBlock(net.minecraft.world.chunk.ChunkPrimer, int, int, int, int, int, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderDebug java.util.List&lt;net.minecraft.world.biome.Biome.SpawnListEntry&gt; getPossibleCreatures(net.minecraft.entity.EnumCreatureType, net.minecraft.util.math.BlockPos) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderSettings.Factory net.minecraft.world.gen.ChunkProviderSettings build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.FlatLayerInfo FlatLayerInfo(int, net.minecraft.block.Block) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderSettings.Serializer net.minecraft.world.gen.ChunkProviderSettings.Factory deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.MapGenBase void generate(net.minecraft.world.World, int, int, net.minecraft.world.chunk.ChunkPrimer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.FlatGeneratorInfo net.minecraft.world.gen.FlatGeneratorInfo getDefaultFlatGenerator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderHell net.minecraft.world.chunk.Chunk provideChunk(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderEnd java.util.List&lt;net.minecraft.world.biome.Biome.SpawnListEntry&gt; getPossibleCreatures(net.minecraft.entity.EnumCreatureType, net.minecraft.util.math.BlockPos) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderFlat java.util.List&lt;net.minecraft.world.biome.Biome.SpawnListEntry&gt; getPossibleCreatures(net.minecraft.entity.EnumCreatureType, net.minecraft.util.math.BlockPos) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderServer void unload(net.minecraft.world.chunk.Chunk) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderHell java.util.List&lt;net.minecraft.world.biome.Biome.SpawnListEntry&gt; getPossibleCreatures(net.minecraft.entity.EnumCreatureType, net.minecraft.util.math.BlockPos) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderHell ChunkProviderHell(net.minecraft.world.World, boolean, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.NoiseGeneratorSimplex NoiseGeneratorSimplex(java.util.Random) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.MapGenRavine boolean isOceanBlock(net.minecraft.world.chunk.ChunkPrimer, int, int, int, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.NoiseGeneratorImproved NoiseGeneratorImproved(java.util.Random) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.NoiseGeneratorPerlin double[] getRegion(double[], double, double, int, int, double, double, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.MapGenCaves void digBlock(net.minecraft.world.chunk.ChunkPrimer, int, int, int, int, int, boolean, net.minecraft.block.state.IBlockState, net.minecraft.block.state.IBlockState) 7'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.NoiseGeneratorOctaves double[] generateNoiseOctaves(double[], int, int, int, int, int, int, double, double, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderDebug java.util.List&lt;net.minecraft.world.biome.Biome.SpawnListEntry&gt; getPossibleCreatures(net.minecraft.entity.EnumCreatureType, net.minecraft.util.math.BlockPos) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderOverworld java.util.List&lt;net.minecraft.world.biome.Biome.SpawnListEntry&gt; getPossibleCreatures(net.minecraft.entity.EnumCreatureType, net.minecraft.util.math.BlockPos) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderEnd java.util.List&lt;net.minecraft.world.biome.Biome.SpawnListEntry&gt; getPossibleCreatures(net.minecraft.entity.EnumCreatureType, net.minecraft.util.math.BlockPos) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.FlatGeneratorInfo net.minecraft.world.gen.FlatGeneratorInfo createFlatGeneratorFromString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderSettings.Serializer com.google.gson.JsonElement serialize(net.minecraft.world.gen.ChunkProviderSettings.Factory, java.lang.reflect.Type, com.google.gson.JsonSerializationContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderOverworld net.minecraft.world.chunk.Chunk provideChunk(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.FlatLayerInfo FlatLayerInfo(int, int, net.minecraft.block.Block) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderDebug net.minecraft.world.chunk.Chunk provideChunk(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderSettings.Serializer net.minecraft.world.gen.ChunkProviderSettings.Factory deserialize(com.google.gson.JsonElement, java.lang.reflect.Type, com.google.gson.JsonDeserializationContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderSettings.Serializer com.google.gson.JsonElement serialize(net.minecraft.world.gen.ChunkProviderSettings.Factory, java.lang.reflect.Type, com.google.gson.JsonSerializationContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderOverworld ChunkProviderOverworld(net.minecraft.world.World, long, boolean, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.NoiseGeneratorPerlin double[] getRegion(double[], double, double, int, int, double, double, double, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.FlatLayerInfo FlatLayerInfo(int, int, net.minecraft.block.Block, int) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.MapGenCaves boolean canReplaceBlock(net.minecraft.block.state.IBlockState, net.minecraft.block.state.IBlockState) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.NoiseGeneratorOctaves double[] generateNoiseOctaves(double[], int, int, int, int, double, double, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderHell java.util.List&lt;net.minecraft.world.biome.Biome.SpawnListEntry&gt; getPossibleCreatures(net.minecraft.entity.EnumCreatureType, net.minecraft.util.math.BlockPos) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderFlat java.util.List&lt;net.minecraft.world.biome.Biome.SpawnListEntry&gt; getPossibleCreatures(net.minecraft.entity.EnumCreatureType, net.minecraft.util.math.BlockPos) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderServer id2ChunkMap'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderFlat net.minecraft.world.chunk.Chunk provideChunk(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderEnd net.minecraft.world.chunk.Chunk provideChunk(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraft.world.gen.ChunkProviderSettings.Factory net.minecraft.world.gen.ChunkProviderSettings.Factory jsonToFactory(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>

<root>
    <item name='net.minecraftforge.items.VanillaInventoryCodeHooks boolean insertHook(net.minecraft.tileentity.TileEntityHopper) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.ItemStackHandler net.minecraft.nbt.NBTTagCompound serializeNBT()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.VanillaDoubleChestItemHandler net.minecraftforge.items.VanillaDoubleChestItemHandler get(net.minecraft.tileentity.TileEntityChest) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.ItemHandlerHelper void giveItemToPlayer(net.minecraft.entity.player.EntityPlayer, net.minecraft.item.ItemStack) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.ItemStackHandler void deserializeNBT(net.minecraft.nbt.NBTBase) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.ItemHandlerHelper void giveItemToPlayer(net.minecraft.entity.player.EntityPlayer, net.minecraft.item.ItemStack, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.VanillaInventoryCodeHooks boolean dropperInsertHook(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.tileentity.TileEntityDispenser, int, net.minecraft.item.ItemStack) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.VanillaInventoryCodeHooks java.lang.Boolean extractHook(net.minecraft.tileentity.IHopper) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.ItemStackHandler void deserializeNBT(net.minecraft.nbt.NBTTagCompound) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.SlotItemHandler boolean isSameInventory(net.minecraft.inventory.Slot) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='net.minecraftforge.items.VanillaDoubleChestItemHandler NO_ADJACENT_CHESTS_INSTANCE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.ItemStackHandler net.minecraft.nbt.NBTBase serializeNBT()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.VanillaInventoryCodeHooks boolean dropperInsertHook(net.minecraft.world.World, net.minecraft.util.math.BlockPos, net.minecraft.tileentity.TileEntityDispenser, int, net.minecraft.item.ItemStack) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.ItemStackHandler int getStackLimit(int, net.minecraft.item.ItemStack) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.SlotItemHandler boolean canTakeStack(net.minecraft.entity.player.EntityPlayer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='net.minecraftforge.items.VanillaInventoryCodeHooks boolean insertHook(net.minecraft.tileentity.IHopper, net.minecraft.util.EnumFacing) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='net.minecraftforge.items.SlotItemHandler int getItemStackLimit(net.minecraft.item.ItemStack) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
